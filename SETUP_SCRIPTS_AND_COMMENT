================
PACEMAKER & COROSYNC CONFIG
====================

yum install pacemaker corosync cman resource-agent pcs crmsh 	


vi /etc/hosts


while /bin/true; do dd if=/dev/urandom of=/tmp/100 bs=1024 count=100000; for i in {1..10}; do cp /tmp/100 /tmp/tmp_$i_$RANDOM; done; rm -f /tmp/tmp_* /tmp/100; done & /usr/sbin/corosync-keygen


scp authkey ...


sed -i.sed "s/.*CMAN_QUORUM_TIMEOUT=.*/CMAN_QUORUM_TIMEOUT=0/g" /etc/sysconfig/cman


ccs -f /etc/cluster/cluster.conf --createcluster pg_cluster


ccs -f /etc/cluster/cluster.conf --addnode DB1
...

ccs -f /etc/cluster/cluster.conf --addmethod pcmk-redirect DB1
...

ccs -f /etc/cluster/cluster.conf --addfencedev pcmk agent=fence_pcmk

ccs -f /etc/cluster/cluster.conf --addfenceinst pcmk DB1 pcmk-redirect port=DB1
...

ccs -f /etc/cluster/cluster.conf --setcman keyfile="/etc/corosync/authkey" transport="udpu"

ccs_config_validate -f /etc/cluster/cluster.conf


============================
PACEMAKER RESOURCE MANAGER BASIC
============================
(crs명령어시)
crs primitive p_mysql ocf:heartbeat:mysql \
  params binary="/usr/sbin/mysqld" \
  op start timeout="120" \
  op stop timeout="120" \
  op promote timeout="120" \
  op demote timeout="120" \
  op monitor role="Master" timeout="30" interval="10" \
  op monitor role="Slave" timeout="30" interval="10"
ms ms_mysql p_mysql \
  meta clone-max=3

(pcs명령어시: 권장)
pcs resource create p_maria mysql params config=/maria/my.cnf client_binary=/maria/bin/mysql datadir=/maria/data pid=/maria/data/mysqld.pid socket=/maria/data/mysqld.sock replication_user=root replication_passwd=root01 user=mysql group=dba  max_slave_lag=60 evict_outdated_slaves=false binary=/maria/bin/mysqld test_user=root test_passwd=root01 log=/maria/data/mysqld.err \
  op start timeout="120" \
  op stop timeout="120" \
  op promote timeout="120" \
  op demote timeout="120" \
  op monitor role="Master" timeout="30" interval="10" \
  op monitor role="Slave" timeout="30" interval="10"


pcs resource master ms_MySQL p_maria
pcs resource update ms_MySQL master-max="1" master-node-max="1" clone-max="2" clone-node-max="1" notify="true" globally-unique="false" target-role="Master" is-managed="true"

 pcs resource op add p_maria monitor interval="10s" role="Master" OCF_CHECK_LEVEL="1" on-fail="standby"

pcs resource op add p_maria monitor interval="2s" role="Slave" OCF_CHECK_LEVEL="1" on-fail="restart"

pcs resource create writer_vip ocf:heartbeat:IPaddr2 \
      ip="192.168.100.185" nic="eth0" \
      op monitor interval="10s"

pcs constraint colocation add  master  ms_MySQL with writer_vip


pcs constraint order promote ms_MySQL then start writer_vip



================================================================
PERCONA 
================================================================
primitive p_mysql ocf:percona:mysql \
      params config="/etc/my.cnf" pid="/var/lib/mysql/mysqld.pid" socket="/var/run/mysqld/mysqld.sock" replication_user="repl_user" \
             replication_passwd="ola5P1ZMU" max_slave_lag="60" evict_outdated_slaves="false" binary="/usr/libexec/mysqld" \
             test_user="test_user" test_passwd="2JcXCxKF" \
      op monitor interval="5s" role="Master" OCF_CHECK_LEVEL="1" \
      op monitor interval="2s" role="Slave" OCF_CHECK_LEVEL="1" \
      op start interval="0" timeout="60s" \
      op stop interval="0" timeout="60s"


pcs resource create reader_vip_1 ocf:heartbeat:IPaddr2 \
      ip="172.30.222.101" nic="eth1" \
      op monitor interval="10s"
pcs resource create reader_vip_2 ocf:heartbeat:IPaddr2 \
      ip="172.30.222.102" nic="eth1" \
      op monitor interval="10s"
pcs resource create writer_vip ocf:heartbeat:IPaddr2 \
      ip="172.30.222.100" nic="eth1" \
      op monitor interval="10s"


ms ms_MySQL p_mysql \
     meta master-max="1" master-node-max="1" clone-max="2" clone-node-max="1" notify="true" globally-unique="false" target-role="Master" is-managed="true"


pcs resource update p_mysql   --master master-max="1" master-node-max="1" clone-max="2" clone-node-max="1" notify="true" globally-unique="false" target-role="Master" is-managed="true"
pcs resource master ms_MySQL p_mysql
pcs constraint colocation add  master  ms_MySQL with writer_vip
pcs resource op add  p_mysql monitor interval="5s" role="Master" OCF_CHECK_LEVEL="1"
pcs resource op add  p_mysql monitor interval="2s" role="Slave" OCF_CHECK_LEVEL="1"


====================================================
[pacemaker의 동작과련]

* slave-> master 승격 : 이때 slave 정보를 pacemaker에 등록한다
* master -> slave : change master수행후 pacemaker정보를 지우고 start slave수행됨다
* 수동으로 change master수행시 master_host는 반드시 hostname으로 명시한다 (사전에 /etc/hosts 파일에 m/s구성 서버 모두 등록)

1. pcs config 수행시 맨밑의 node attribute는 Masternode가 slave였을때의 show slave status의 결과값이다

(예) LGEDITMS01V서버가 현재 master이고 slave일때 상태정보
Node Attributes:
 LGEDITMS01V: LGEDITMS02V-log-file-p_mysql=mariadb-bin.000008 LGEDITMS02V-log-pos-p_mysql=328

2. node attribute가 2line으로 2개 node정보가 모두인경우는 아래와 같은 상황이다
   한node가 master이며 한node는 stop인상황
   즉, master가 slave로 승격전 stop상태일때 아직 slave로 되지 않아 정보가 남아있는상황
   stop => slave로 빠지면 해당 노드의 node attribute는 삭제된다
   
3. M/S구성에서 M NODE백업을 이용해서 M가 죽었을때 신규M에 S로 붙이는 법
  : M백업본을 복구하고 CHANGE MASTER시 CRM_ATTR이용하요 기존 M의 NODE ATTRIBUTE(PACEMAKER정보:PCS CONFIG)의 
    FILE,POS로 기입하여 S로 복구 수행
    
4. M/S구성에서 M백업을 활용해 S구성 혹은 복구하기
   M의 백업본에 Xtrabackup_bin_info 정보의 file,pos정보를 가지고 crm_attr이용해 slave cluster를 start하여 s로 구성
   이후 pcs config확인하여 s의 node attr정보를 삭제
   


=========================================
백업본으로 DB복구후
CLUSTER에 CHANGER MASTER정보를 제공

crm_attribute --node LGEDITMS02V --name LGEDITMS01V-log-file-p_mysql -v mariadb-bin.000093
crm_attribute --node LGEDITMS02V --name LGEDITMS01V-log-pos-p_mysql -v 11783432  

DB복구후 DB기동은 위 SCRIPT를 수행하여 복구대상 CLUSTER NODE에게 정보 제공후
해당 CLUSTER 정보 CLEANUP 혹은 UNSTANDBY 필요

이후 SLAVE NODE의 NODE ATTRRIBUTE(CHANGE MASTER정보는 삭제해야함)

예: 

crm_attribute --node LGEDITMS02V --name LGEDITMS01V-log-file-p_mysql --delete
crm_attribute --node LGEDITMS02V --name LGEDITMS01V-log-pos-p_mysql --delete
========================================================================


=====================
참고
======================
1.yum 세팅(되있으면 생략)
- image 옮기고(/root/rhel_image)
- /etc/yum.repos.d/rhel_6.6.repo 
[redhatimage]
name=REDHAT DVD ISO
baseurl=file:///root/rhel_image
enabled=1
gpgcheck=1
gpgkey=file:///root/rhel_image/RPM-GPG-KEY-redhat-release


[HighAvailability]
name=Red Hat Enterprise Linux 6.6 - HighAvailability
metadata_expire=-1
gpgcheck=0
cost=500
enabled=1
baseurl=file:///root/rhel_image/HighAvailability
gpgkey=file:///root/rhel_image/RPM-GPG-KEY-redhat-release


2. yum install corosync pacemaker pcs cman ccs resource-agents
2. 클러스터용 쉘 프로그램인 crmsh를 추가로 설치하고 (Optional)
# yum -y install redhat-rpm-config 
# rpm -ivh python-pssh-2.3.1-4.2.x86_64.rpm
# rpm -ivh pssh-2.3.1-15.1.x86_64.rpm 
# rpm -ivh crmsh-2.0+git5-1.1.x86_64.rpm


3./etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

192.168.55.178 LCNDOBOTP01 lcndobotp01
192.168.55.179 LCNDOBOTP02 lcndobotp02

4. /etc/corosync/corosync.conf 설정
compatibility: whitetank

totem {
        version: 2
        secauth: on
        window_size: 500

        threads: 0

        interface {
                ringnumber: 0
                bindnetaddr: 10.0.10.0     <- heartbeat 대역, 없으면 public 서버 IP 대역 사용
                mcastaddr: 226.94.5.1
                mcastport: 5405
                ttl: 64
        }
}

logging {
        fileline: off
        to_stderr: no
        to_logfile: yes
        logfile: /var/log/cluster/corosync.log
        to_syslog: yes
        debug: off
        timestamp: on
        logger_subsys {
                subsys: AMF
                debug: off
        }
}

amf {
        mode: disabled
}

4. corosync-keygen으로 authkey 생성
while /bin/true; do dd if=/dev/urandom of=/tmp/100 bs=1024 count=100000; for i in {1..10}; do cp /tmp/100 /tmp/tmp_$i_$RANDOM; done; rm -f /tmp/tmp_* /tmp/100; done & /usr/sbin/corosync-keygen

5. 클러스터 설정파일 세팅(호스트명으로 ~)
ccs -f /etc/cluster/cluster.conf --createcluster tmasterdb

ccs -f /etc/cluster/cluster.conf --addnode LCNDOBOTP01
ccs -f /etc/cluster/cluster.conf --addnode LCNDOBOTP02

ccs -f /etc/cluster/cluster.conf --addmethod pcmk-redirect LCNDOBOTP01 
ccs -f /etc/cluster/cluster.conf --addmethod pcmk-redirect LCNDOBOTP02

ccs -f /etc/cluster/cluster.conf --addfencedev pcmk agent=fence_pcmk

ccs -f /etc/cluster/cluster.conf --addfenceinst pcmk LCNDOBOTP01 pcmk-redirect port=LCNDOBOTP01
ccs -f /etc/cluster/cluster.conf --addfenceinst pcmk LCNDOBOTP02 pcmk-redirect port=LCNDOBOTP02

ccs -f /etc/cluster/cluster.conf --setcman keyfile="/etc/corosync/authkey" transport="udpu"
ccs_config_validate -f /etc/cluster/cluster.conf

6. 파일삭제(양쪽)
rm -rf /var/lib/pacemaker/cib/*
rm -rf /var/lib/pacemaker/pengine/*

7. 기동(양쪽DB)
scp로 cluster.conf DB2에 옮김
service cman start
service pacemaker start


10. 한쪽서버
pcs property set stonith-enabled=false
crm_attribute --attr-name no-quorum-policy --attr-value ignore
crm_attribute --attr-name stonith-enabled --attr-value false

11. RESOURCE AGENT 파일 옮기기(권한줄것+x)
cp /usr/lib/ocf/resource.d/heartbeat/mysql /usr/lib/ocf/resource.d/heartbeat/mysql.backup
chmod +x /usr/lib/ocf/resource.d/heartbeat/mysql
/usr/lib/ocf/resource.d/heartbeat/mysql 로 변경(유K 깃허브)


12. /usr/lib/ocf/resource.d/heartbeat/mysql 현행화.. 
( 변경 후 touch mysql)

13. PCS 설정(db기동되있어야함,master-slave)
- DB관련 복제유저의 경우 권한
grant SUPER, REPLICATION SLAVE, REPLICATION CLIENT, PROCESS, RELOAD ON *.* TO 'repl'@'localhost' identified by 'dlatl00';

- DB테스트용 유저
grant select ON mysql.user to test_user@'localhost' identified by 'dlatl00';


pcs resource create p_maria mysql params config=/etc/my.cnf client_binary=/engn001/maria/mariadb-10.0.21/bin/mysql \
  datadir=/data001/maria/data pid=/data001/maria/data/mysqld.pid socket=/data001/maria/data/mysqld.sock replication_user=repl replication_passwd="dlatl00" \
  user=mariasvc01 group=mariasvc  max_slave_lag=60 evict_outdated_slaves=false binary=/engn001/maria/mariadb-10.0.21/bin/mysqld test_user=test_user test_passwd="dlatl00" log=/logs001/maria/error/mysqld.err \
  op start timeout="120" \
  op stop timeout="120" \
  op promote timeout="120" \
  op demote timeout="120" \
  op monitor role="Master" timeout="30" interval="10" \
  op monitor role="Slave" timeout="30" interval="10"


pcs resource master ms_MySQL p_maria
pcs resource update ms_MySQL master-max="1" master-node-max="1" clone-max="2" clone-node-max="1" notify="true" globally-unique="false" target-role="Master" is-managed="true"

pcs resource op add p_maria monitor interval="10s" role="Master" OCF_CHECK_LEVEL="1" on-fail="standby"

pcs resource op add p_maria monitor interval="2s" role="Slave" OCF_CHECK_LEVEL="1" on-fail="standby"

pcs config 조회 후 불필요한 pcs resource op remove motinor 삭제


* writer vip 설정
pcs resource create writer_vip ocf:heartbeat:IPaddr2 \
      ip="192.168.55.191" nic="eth0:1" \
      op monitor interval="10s"

pcs constraint colocation add  master  ms_MySQL with writer_vip

pcs constraint order promote ms_MySQL then start writer_vip



-- 기타
crm_attribute --node LCNDOBOTP02 --name LCNDOBOTP01-log-file-p_maria -v mariadb-bin.000038 
crm_attribute --node LCNDOBOTP02 --name LCNDOBOTP01-log-pos-p_maria -v 328
crm_attribute --node LCNDOBOTP01 --name LCNDOBOTP01-log-file-p_maria --delete 
crm_attribute --node LCNDOBOTP01 --name LCNDOBOTP01-log-pos-p_maria --delete 

-- 상태확인
pcs config (slave가 master 됐을때 master는 slave의 binlog 정보를 지님, 추후 standby 시 정보를 이용)
pcs status
pcs resource cleanup p_maria
pcs cluster standby LCNDOBOTP02
pcs cluster unstandby LCNDOBOTP02
pcs resource delete ms_MySQL
pcs resource op remove (Mornitor불필요항목제거)
pcs cluster edit (export EDITOR=/bin/vi)

service cman status
service pacemaker status
cman_tool nodes -a

 ============================================================================
 1. replication user 의 passwd는 @,! 등 특수기호가 배재되어야함
 2. replication user는 SUPER, REPLICATION SLAVE, REPLICATION CLIENT, PROCESS, RELOAD 권한이 있어야함
 3. replication user는 localhost 로 host정보를 등록하며, 추가로 상대편 ip대역이 등록되어야한다
   (localhost : pacemaker가 read_only, show slave status를 사용시 'repl'@'localhost' 방식으로 접속한다
    relica ip대역 : change master 수행시 관련 host정보가 필요하다 ex) 10.127.4.%)
 ============================================================================
